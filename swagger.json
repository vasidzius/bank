{
  "swagger": "2.0",
  "info": {
    "description": "\"Imitation Bank Processing System\"",
    "version": "1.0.0",
    "title": "Bank",
    "license": {
      "name": "Apache License Version 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0\""
    }
  },
  "host": "localhost:8080",
  "basePath": "/bank",
  "tags": [
    {
      "name": "account-controller",
      "description": "Account Controller"
    },
    {
      "name": "transfer-controller",
      "description": "Transfer Controller"
    }
  ],
  "paths": {
    "/accounts": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "view a list of all existing accounts except deleted",
        "operationId": "findAllUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "204": {
            "description": "There are no accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "create Account by setting up balance in double form like ##.##",
        "operationId": "createAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "balance",
            "description": "only two digits after dot is allowed",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/accounts/allDeleted": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Show all deleted Accounts",
        "operationId": "findAllDeletedUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "204": {
            "description": "There are no deleted accounts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "Find Account by Id",
        "operationId": "findUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "204": {
            "description": "There is no account with given Id",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "account-controller"
        ],
        "summary": "Delete account by Id. In fact this operation doesn't delete record in DB but change flag 'deleted' to TRUE",
        "operationId": "deleteAccountUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "accountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "There is no account with current Id",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/transfers": {
      "get": {
        "tags": [
          "transfer-controller"
        ],
        "summary": "view a list of all existing Transfers",
        "operationId": "findAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transfer"
              }
            }
          },
          "204": {
            "description": "There are no Transfers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Transfer"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "transfer-controller"
        ],
        "summary": "create Transfer. There are three possibilities: between two account, increasing (field fromAccountId is null), decreasing (field toAccountId is null)",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "transferRequest",
            "description": "transferRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransferRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/transfers/{transferId}": {
      "get": {
        "tags": [
          "transfer-controller"
        ],
        "summary": "Find Transfer by Id",
        "operationId": "findUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "description": "transferId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          },
          "204": {
            "description": "There is no Transfer with given Id",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "required": [
        "balance"
      ],
      "properties": {
        "balance": {
          "type": "integer",
          "format": "int64",
          "description": "Internal representation of Balance, use Long type",
          "allowEmptyValue": false
        },
        "balanceDoubleView": {
          "type": "number",
          "format": "double",
          "description": "External representation of Balance, use Double type",
          "readOnly": true,
          "allowEmptyValue": false
        },
        "deleted": {
          "type": "boolean",
          "example": false,
          "description": "Is Account deleted?",
          "allowEmptyValue": false
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "allowEmptyValue": false
        }
      },
      "title": "Account"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "Transfer": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int64"
        },
        "amountDoubleView": {
          "type": "number",
          "format": "double"
        },
        "executed": {
          "type": "boolean"
        },
        "fromAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "toAccountId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Transfer"
    },
    "TransferRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "fromAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "toAccountId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TransferRequest"
    }
  }
}